%-------------------------------=  --------------------------------------------
\section{\TeX\ definitions}
%-------------------------------=  --------------------------------------------

\begin{code}
\makeatletter

%if latex209
\input{amstext.sty}
\input{amssymb.sty}
\input{stmaryrd.sty}
\newcommand\ensuremath[1]{\ifmmode#1\else\mbox{$#1$}\fi}
%if euler
\input{euler.sty}
%endif
%else
\usepackage{amstext}
\usepackage{amssymb}
\usepackage{stmaryrd}
%if euler
\usepackage{euler}
%endif
%endif
\end{code}
%
\NB Die bedingte Formatierung wird \emph{nicht} verwendet, um
gleichzeitig Math und Verbatim formatieren zu k"onnen.

%-------------------------------=  --------------------------------------------
\subsection{Typewriter style}
%-------------------------------=  --------------------------------------------

ks, 17.07.2003: Added a conditional that only includes this part
if the selected style is typewriter style.

\begin{code}
%if style == tt
%if not latex209
\DeclareFontFamily{OT1}{cmtex}{}
\DeclareFontShape{OT1}{cmtex}{m}{n}
  {<5><6><7><8>cmtex8
   <9>cmtex9
   <10><10.95><12><14.4><17.28><20.74><24.88>cmtex10}{}
\DeclareFontShape{OT1}{cmtex}{m}{it}
  {<-> ssub * cmtt/m/it}{}
\newcommand{\texfamily}{\fontfamily{cmtex}\selectfont}
%if underlineKeywords
\usepackage{ulem}\normalem
%else
\DeclareFontShape{OT1}{cmtt}{bx}{n}
  {<5><6><7><8>cmtt8
   <9>cmbtt9
   <10><10.95><12><14.4><17.28><20.74><24.88>cmbtt10}{}
\DeclareFontShape{OT1}{cmtex}{bx}{n}
  {<-> ssub * cmtt/bx/n}{}
\newcommand{\tex}[1]{\text{\texfamily#1}}	% NEU
%endif
%endif

\newcommand{\Sp}{\hskip.33334em\relax}
%endif
\end{code}

%-------------------------------=  --------------------------------------------
\subsection{Math style}
%-------------------------------=  --------------------------------------------

ks, 17.07.2003: As with the typewriter path, this is now conditionally
included for math or poly mode.

\begin{code}
%if anyMath
%if times
\usepackage{times}\renewcommand{\ttdefault}{cmtt}
\SetMathAlphabet{\mathrm}{normal}{OT1}{ptm}{m}{n}
\SetMathAlphabet{\mathbf}{normal}{OT1}{ptm}{bx}{n}
\SetMathAlphabet{\mathit}{normal}{OT1}{ptm}{m}{it}
%endif

\newlength{\lwidth}\setlength{\lwidth}{4.5cm}
\newlength{\cwidth}\setlength{\cwidth}{8mm} % 3mm

\newcommand{\hsindent}[1]{\quad}% default is fixed indentation

%if latex209
\newcommand{\Conid}[1]{{\mathit #1}}
\newcommand{\Varid}[1]{{\mathit #1}}
\newcommand{\anonymous}{\_}
%else
\newcommand{\Conid}[1]{\mathit{#1}}
\newcommand{\Varid}[1]{\mathit{#1}}
\newcommand{\anonymous}{\kern0.06em \vbox{\hrule\@@width.5em}}
%endif
\newcommand{\plus}{\mathbin{+\!\!\!+}}
\newcommand{\bind}{\mathbin{>\!\!\!>\mkern-6.7mu=}}
\newcommand{\sequ}{\mathbin{>\!\!\!>}}
%if not standardsymbols
\renewcommand{\leq}{\leqslant}
\renewcommand{\geq}{\geqslant}
%endif
%endif
\end{code}

The following definitions facilitate the saving and restoring
of column width information as well as the redefinition of
column specifiers. It only works for @poly@ style.

\begin{code}
%if style == poly
\def\resethooks{%
  \global\let\SaveRestoreHook\empty
  \global\let\ColumnHook\empty}
\newcommand*{\savecolumns}[1][default]%
  {\g@@addto@@macro\SaveRestoreHook{\savecolumns[#1]}}
\newcommand*{\restorecolumns}[1][default]%
  {\g@@addto@@macro\SaveRestoreHook{\restorecolumns[#1]}}
\newcommand*{\aligncolumn}[2]%
  {\g@@addto@@macro\ColumnHook{\column{#1}{#2}}}

%if standardsymbols
\newcommand{\onelinecommentchars}{\quad--- }
%else
\newcommand{\onelinecommentchars}{\quad-{}- }
%endif
\newcommand{\commentbeginchars}{\enskip\{-}
\newcommand{\commentendchars}{-\}\enskip}

\newcommand{\visiblecomments}{%
  \let\onelinecomment=\onelinecommentchars
  \let\commentbegin=\commentbeginchars
  \let\commentend=\commentendchars}

\newcommand{\invisiblecomments}{%
  \let\onelinecomment=\empty
  \let\commentbegin=\empty
  \let\commentend=\empty}

\visiblecomments
%endif
\end{code}

%-------------------------------=  --------------------------------------------
\subsection{Some useful definitions}
%-------------------------------=  --------------------------------------------

\begin{code}
\newcommand{\NB}{\textbf{NB}}
\newcommand{\Todo}[1]{$\langle$\textbf{To do:}~#1$\rangle$}

\makeatother
\end{code}
